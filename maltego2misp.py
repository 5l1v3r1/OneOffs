#!/usr/bin/env python

import sys, uuid, datetime

__author__ = "Jeff White [karttoon]"
__email__ = "karttoon@gmail.com"
__version__ = "1.0.1"

if len(sys.argv) != 3:
	print "\nSelect objects in Maltego and copy as 'type#value', paste list into file to generate OpenIOC file for MISP import."
	print "\n\tUsage:", sys.argv[0], "<maltego_values> <out_file>\n"
	sys.exit(1)

if not sys.argv[2].endswith(".ioc"):
	ioc_out = sys.argv[2] + ".ioc"
else:
	ioc_out = sys.argv[2]

out_file = open(ioc_out, "w")
xml_head = """<?xml version="1.0" encoding="us-ascii"?>
<ioc xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="%s" last-modified="%sT00:00:00" xmlns="http://schemas.mandiant.com/2010/ioc">
  <short_description>Generated by maltego2misp.py</short_description>
  <authored_date>%sT00:00:00</authored_date>
  <links />
  <definition>
    <Indicator operator="OR" id="%s">
""" % (uuid.uuid4(), datetime.date.today(), datetime.date.today(), uuid.uuid4())

out_file.write(xml_head)

xml_foot = """
    </Indicator>
  </definition>
</ioc>
"""

def write_ioc(id1, id2, value):
	out_file.write('      <IndicatorItem id="%s" condition="is">\n' % (uuid.uuid4()))
	out_file.write('        <Context document="%s" search="%s/%s" type="mir" />\n' % (id1, id1, id2))
	out_file.write('        <Content type="string">%s</Content>\n' % (value))
	out_file.write('      </IndicatorItem>\n')

file = open(sys.argv[1], "r")
entries = []
for line in file:
	entries.append(line.strip())

for entry in entries:	
	if "maltego.IPv4Address#" in entry: # IP Address
		id_type, value = entry.split("#")
		write_ioc("PortItem", "remoteIP", value)
	elif "maltego.Domain#" in entry or "maltego.DNSName#" in entry: # Domain/DNS
		id_type, value = entry.split("#")
		write_ioc("Network", "DNS", value)
	elif "maltego.URL#" in entry or "maltego.Website" in entry: # URL 
		id_type, value = entry.split("#")
		write_ioc("UrlHistoryItem", "URL", value)
	elif "malformity.Hash#" in entry: # Hashes
		id_type, value = entry.split("#")
		if len(value) == 32:
			write_ioc("FileItem", "Md5sum", value)
		if len(value) == 40:
			write_ioc("FileItem", "Sha1sum", value)
		if len(value) == 64:
			write_ioc("FileItem", "Sha256sum", value)
	elif "malformity.Mutex#" in entry: # Mutex
#		id_type, value = entry.split("#")
#		write_ioc("Network", "DNS", value)
		print "Map fail =", entry
	elif "malformity.RegistryEntry#" in entry: # Registry Entry
		id_type, value = entry.split("#")
		write_ioc("Registry", "Modified", value)
	elif "malformity.MaliciousProcess#" in entry: # Process Name
#		id_type, value = entry.split("#")
#		write_ioc("Network", "DNS", value)
		print "Map fail =", entry
	elif "malformity.ServiceName#" in entry: # Service Name
#		id_type, value = entry.split("#")
#		write_ioc("Network", "DNS", value)
		print "Map fail =", entry
	elif "malformity.UserAgent#" in entry: # User-Agent
		id_type, value = entry.split("#")
		write_ioc("Network", "UserAgent", value)
	elif "malformity.Filename#" in entry or "analysis.Filename" in entry: # File Name
		id_type, value = entry.split("#")
		write_ioc("FileItem", "FileName", value)
	elif "malformity.FilePath#" in entry: # File Path
		id_type, value = entry.split("#")
		write_ioc("FileItem", "FullPath", value)
	elif "maltego.Phrase#" in entry: # Phrase/Comment/Other
		id_type, value = entry.split("#")
		write_ioc("TaskItem", "Comment", value)
	elif "maltego.Email#" in entry: # E-mail Attachment
		id_type, value = entry.split("#")
		write_ioc("Email", "Attachment/Na", value)
	elif "maltego.EmailAddress#" in entry: # E-mail Address
		id_type, value = entry.split("#")
		write_ioc("Email", "To", value)
	else: # Catch-all
		print "Map fail =", entry

out_file.write(xml_foot)
